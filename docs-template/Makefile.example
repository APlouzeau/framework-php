# Makefile pour la documentation de votre application
# Utilise EyoPHP Framework avec PHPDocumentor

# Variables
PHPDOC = ./vendor/bin/phpdoc
CONFIG = phpdoc.xml
OUTPUT_DIR = docs/api
CACHE_DIR = .phpdoc
PORT = 8080

# Couleurs pour les messages
GREEN = \033[32m
YELLOW = \033[33m
RED = \033[31m
NC = \033[0m # No Color

.PHONY: help docs docs-serve docs-clean docs-check install-phpdoc

# Aide par d√©faut
help:
	@echo "$(GREEN)üìñ Documentation - EyoPHP Framework$(NC)"
	@echo ""
	@echo "$(YELLOW)Commandes disponibles :$(NC)"
	@echo "  make docs          - G√©n√©rer la documentation"
	@echo "  make docs-serve    - Servir la documentation en local"
	@echo "  make docs-clean    - Nettoyer les fichiers g√©n√©r√©s"
	@echo "  make docs-check    - V√©rifier la configuration"
	@echo "  make install-phpdoc - Installer PHPDocumentor"
	@echo ""
	@echo "$(YELLOW)Configuration :$(NC)"
	@echo "  Port du serveur : $(PORT)"
	@echo "  Fichier config  : $(CONFIG)"
	@echo "  Dossier sortie  : $(OUTPUT_DIR)"

# V√©rifier que PHPDocumentor est install√©
check-phpdoc:
	@if [ ! -f $(PHPDOC) ]; then \
		echo "$(RED)‚ùå PHPDocumentor non trouv√© !$(NC)"; \
		echo "$(YELLOW)Installez-le avec : make install-phpdoc$(NC)"; \
		exit 1; \
	fi

# V√©rifier que le fichier de config existe
check-config:
	@if [ ! -f $(CONFIG) ]; then \
		echo "$(RED)‚ùå Fichier de configuration $(CONFIG) non trouv√© !$(NC)"; \
		echo "$(YELLOW)Copiez le template : cp docs-template/phpdoc.xml.example $(CONFIG)$(NC)"; \
		exit 1; \
	fi

# Installer PHPDocumentor
install-phpdoc:
	@echo "$(YELLOW)üì¶ Installation de PHPDocumentor...$(NC)"
	composer require --dev phpdocumentor/shim
	@echo "$(GREEN)‚úÖ PHPDocumentor install√© !$(NC)"

# G√©n√©rer la documentation
docs: check-phpdoc check-config
	@echo "$(YELLOW)üìö G√©n√©ration de la documentation...$(NC)"
	@mkdir -p $(OUTPUT_DIR)
	$(PHPDOC) -c $(CONFIG)
	@echo "$(GREEN)‚úÖ Documentation g√©n√©r√©e dans $(OUTPUT_DIR)$(NC)"

# Servir la documentation en local
docs-serve: docs
	@echo "$(YELLOW)üåê D√©marrage du serveur de documentation...$(NC)"
	@echo "$(GREEN)üìñ Documentation disponible sur : http://localhost:$(PORT)$(NC)"
	@echo "$(YELLOW)Appuyez sur Ctrl+C pour arr√™ter$(NC)"
	php -S localhost:$(PORT) -t $(OUTPUT_DIR)

# Nettoyer les fichiers g√©n√©r√©s
docs-clean:
	@echo "$(YELLOW)üßπ Nettoyage des fichiers de documentation...$(NC)"
	@rm -rf $(OUTPUT_DIR) $(CACHE_DIR)
	@echo "$(GREEN)‚úÖ Fichiers nettoy√©s !$(NC)"

# V√©rifier la configuration
docs-check: check-phpdoc check-config
	@echo "$(GREEN)‚úÖ Configuration valide !$(NC)"
	@echo "$(YELLOW)PHPDocumentor : $(NC)$(shell $(PHPDOC) --version)"
	@echo "$(YELLOW)Configuration : $(NC)$(CONFIG)"
	@echo "$(YELLOW)Dossiers source d√©tect√©s :$(NC)"
	@grep -E "<folder>" $(CONFIG) | sed 's/.*<folder>\(.*\)<\/folder>.*/  - \1/' || echo "  Aucun dossier configur√©"
