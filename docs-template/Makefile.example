# Makefile pour la documentation de votre application
# Utilise EyoPHP Framework avec PHPDocumentor

# Variables
PHPDOC = ./vendor/bin/phpdoc
CONFIG = phpdoc.xml
OUTPUT_DIR = docs/api
CACHE_DIR = .phpdoc
PORT = 8080

# Couleurs pour les messages
GREEN = \033[32m
YELLOW = \033[33m
RED = \033[31m
NC = \033[0m # No Color

.PHONY: help serve test test-coverage install clean build docs docs-serve docs-clean docs-check install-phpdoc

# Aide par d√©faut
help:
	@echo "$(GREEN)ÔøΩ EyoPHP Framework - Commandes de d√©veloppement$(NC)"
	@echo ""
	@echo "$(YELLOW)üõ†Ô∏è  D√©veloppement :$(NC)"
	@echo "  make serve         - Lancer le serveur de d√©veloppement"
	@echo "  make test          - Ex√©cuter les tests"
	@echo "  make test-coverage - Tests avec couverture de code"
	@echo "  make install       - Installer les d√©pendances"
	@echo "  make clean         - Nettoyer les fichiers temporaires"
	@echo "  make build         - Build complet (install + test + docs)"
	@echo ""
	@echo "$(YELLOW)üìñ Documentation :$(NC)"
	@echo "  make docs          - G√©n√©rer la documentation"
	@echo "  make docs-serve    - Servir la documentation en local"
	@echo "  make docs-clean    - Nettoyer les fichiers g√©n√©r√©s"
	@echo "  make docs-check    - V√©rifier la configuration"
	@echo "  make install-phpdoc - Installer PHPDocumentor"
	@echo ""
	@echo "$(YELLOW)Configuration :$(NC)"
	@echo "  Port du serveur : $(PORT)"
	@echo "  Fichier config  : $(CONFIG)"
	@echo "  Dossier sortie  : $(OUTPUT_DIR)"

# =============================================
# COMMANDES DE D√âVELOPPEMENT
# =============================================

# Lancer le serveur de d√©veloppement
serve:
	@echo "$(YELLOW)üöÄ D√©marrage du serveur de d√©veloppement...$(NC)"
	@echo "$(GREEN)üåê Application disponible sur : http://localhost:8000$(NC)"
	@echo "$(GREEN)üìÅ Dossier racine : ./public/$(NC)"
	@echo "$(YELLOW)Appuyez sur Ctrl+C pour arr√™ter$(NC)"
	php -S localhost:8000 -t public/

# Installer les d√©pendances
install:
	@echo "$(YELLOW)üì¶ Installation des d√©pendances...$(NC)"
	composer install
	@echo "$(GREEN)‚úÖ D√©pendances install√©es !$(NC)"

# Ex√©cuter les tests
test:
	@echo "$(YELLOW)üß™ Ex√©cution des tests...$(NC)"
	./vendor/bin/phpunit
	@echo "$(GREEN)‚úÖ Tests termin√©s !$(NC)"

# Ex√©cuter les tests avec couverture
test-coverage:
	@echo "$(YELLOW)üß™ Tests avec couverture de code...$(NC)"
	./vendor/bin/phpunit --coverage-html coverage/
	@echo "$(GREEN)‚úÖ Rapport de couverture g√©n√©r√© dans ./coverage/$(NC)"

# Nettoyer les fichiers temporaires
clean:
	@echo "$(YELLOW)üßπ Nettoyage des fichiers temporaires...$(NC)"
	@rm -rf $(OUTPUT_DIR) $(CACHE_DIR) coverage/ .phpunit.result.cache
	@echo "$(GREEN)‚úÖ Fichiers temporaires nettoy√©s !$(NC)"

# Commande compl√®te : install + test + docs
build: install test docs
	@echo "$(GREEN)üéâ Build complet termin√© !$(NC)"

# =============================================
# COMMANDES DE DOCUMENTATION
# =============================================

# V√©rifier que PHPDocumentor est install√©
check-phpdoc:
	@if [ ! -f $(PHPDOC) ]; then \
		echo "$(RED)‚ùå PHPDocumentor non trouv√© !$(NC)"; \
		echo "$(YELLOW)Installez-le avec : make install-phpdoc$(NC)"; \
		exit 1; \
	fi

# V√©rifier que le fichier de config existe
check-config:
	@if [ ! -f $(CONFIG) ]; then \
		echo "$(RED)‚ùå Fichier de configuration $(CONFIG) non trouv√© !$(NC)"; \
		echo "$(YELLOW)Copiez le template : cp docs-template/phpdoc.xml.example $(CONFIG)$(NC)"; \
		exit 1; \
	fi

# Installer PHPDocumentor
install-phpdoc:
	@echo "$(YELLOW)üì¶ Installation de PHPDocumentor...$(NC)"
	composer require --dev phpdocumentor/shim
	@echo "$(GREEN)‚úÖ PHPDocumentor install√© !$(NC)"

# G√©n√©rer la documentation
docs: check-phpdoc check-config
	@echo "$(YELLOW)üìö G√©n√©ration de la documentation...$(NC)"
	@mkdir -p $(OUTPUT_DIR)
	$(PHPDOC) -c $(CONFIG)
	@echo "$(GREEN)‚úÖ Documentation g√©n√©r√©e dans $(OUTPUT_DIR)$(NC)"

# Servir la documentation en local
docs-serve: docs
	@echo "$(YELLOW)üåê D√©marrage du serveur de documentation...$(NC)"
	@echo "$(GREEN)üìñ Documentation disponible sur : http://localhost:$(PORT)$(NC)"
	@echo "$(YELLOW)Appuyez sur Ctrl+C pour arr√™ter$(NC)"
	php -S localhost:$(PORT) -t $(OUTPUT_DIR)

# Nettoyer les fichiers g√©n√©r√©s
docs-clean:
	@echo "$(YELLOW)üßπ Nettoyage des fichiers de documentation...$(NC)"
	@rm -rf $(OUTPUT_DIR) $(CACHE_DIR)
	@echo "$(GREEN)‚úÖ Fichiers nettoy√©s !$(NC)"

# V√©rifier la configuration
docs-check: check-phpdoc check-config
	@echo "$(GREEN)‚úÖ Configuration valide !$(NC)"
	@echo "$(YELLOW)PHPDocumentor : $(NC)$(shell $(PHPDOC) --version)"
	@echo "$(YELLOW)Configuration : $(NC)$(CONFIG)"
	@echo "$(YELLOW)Dossiers source d√©tect√©s :$(NC)"
	@grep -E "<folder>" $(CONFIG) | sed 's/.*<folder>\(.*\)<\/folder>.*/  - \1/' || echo "  Aucun dossier configur√©"
